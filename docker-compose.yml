version: '3.8'
services:
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"
    networks:
      - microservices

  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
    networks:
      - microservices

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - microservices

  redis:
    command: redis
    image: redis:6.0.9
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    ports:
      - "6379:6379"
    networks:
      - microservices

  # zookeeper:
  #   image: 'bitnami/zookeeper:3.6.2'
  #   ports:
  #     - 2181:2181
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #     - ZOO_SERVER_USERS=${ZOO_SERVER_USERS}
  #     - ZOO_SERVER_PASSWORDS=${ZOO_SERVER_PASSWORDS}
  #   networks:
  #     - microservices

  # kafka:
  #   image: bitnami/kafka:2.6.0
  #   ports:
  #     - 9092:9092
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_DEFAULT_REPLICATION_FACTOR=1
  #     - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - microservices

  # kafka-ui:
  #   image: obsidiandynamics/kafdrop:latest
  #   ports:
  #     - 9000:9000
  #   depends_on:
  #     - kafka
  #   networks:
  #     - microservices

networks:
  microservices:
    name: microservices
    driver: bridge
      